"use client";

import Head from "next/head";
import Image from "next/image";
import add_image from "./assets/add.png";
import { useEffect, useState } from "react";
import { signIn, useSession } from "next-auth/react";
import AppTodo from "./components/addTodo";
import { api } from "@/utils/api";
import SideBarTodoComponent from "./components/sideBarTodo";

export default function Home() {
  const { data: sessionData } = useSession();
  const [todoState, setTodoState] = useState<Array<{ id: string }>>();
  const [component, setComponent] = useState(<></>);
  const [todoComponent, setTodoComponent] = useState(
    <>
      <p className="m-0 p-0 text-[#343434]">Please Select Todo to View</p>
    </>
  );

  const todos = api.todo.getTodos.useQuery();

  const setAddTodoHandler = () => {
    setComponent(<AppTodo removeAddTodoHandler={removeAddTodoHandler} />);
  };

  const removeAddTodoHandler = (component: JSX.Element) => {
    setComponent(component);
  };

  const displayTodoHandler = (data: JSX.Element) => {
    setTodoComponent(data);
  };

  useEffect(() => {
    if (todos.isFetching === false) {
      if (todos.data !== undefined) {
        setTodoState(todos.data);
      }
    }
  }, [todos]);

  return (
    <>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="absolute left-0 top-0 flex h-screen w-screen flex-row items-center justify-center">
        <div className="relative flex h-full w-[15%] flex-col items-center justify-start bg-[#343434]">
          <button
            className="relative mt-[25px] h-[30px] w-[30px]"
            onClick={
              sessionData === null
                ? () => window.alert("Please login first")
                : () => setAddTodoHandler()
            }
          >
            <Image src={add_image} alt="" height={30} width={30} />
          </button>
          <div className="relative mt-[35px] flex h-1/2 w-full flex-col items-center justify-start text-white/75">
            <p className="text-[12px]">Todos:</p>
            {todoState === undefined ? (
              <></>
            ) : (
              todoState.map((todo, index) => {
                return (
                  <SideBarTodoComponent
                    key={`todos${index}`}
                    id={todo.id}
                    index={index}
                    displayTodoHandler={displayTodoHandler}
                  />
                );
              })
            )}
          </div>
        </div>
        <div className="relative flex h-full w-[85%]">
          <div className="relatiev flex h-full w-full flex-col items-center justify-center">
            {sessionData ? (
              <button
                className="absolute right-[15px] top-[10px] h-[45px] w-[45px] rounded-[50px] bg-[#343434] text-[24px] font-medium text-[white]/75"
                onClick={() => (window.location.href = `/profile`)}
              >
                {sessionData.user.name?.charAt(0).toUpperCase()}
              </button>
            ) : (
              <p
                className="absolute right-[20px] top-[15px] text-[14px] font-medium"
                onClick={() => void signIn()}
              >
                Sign In
              </p>
            )}
            {todoState === undefined ? (
              <p className="m-0 p-0 text-[#343434]">No Todo to View</p>
            ) : (
              todoComponent
            )}
          </div>
        </div>
        {component}
      </main>
    </>
  );
}
